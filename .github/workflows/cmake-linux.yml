name: Linux build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    # build the 2 environments
    strategy:
      matrix:
        build-type: [Debug, Release]

    steps:
    - uses: actions/checkout@v2

    - name: Install required tools
      run: sudo apt update && sudo apt install -y cmake make clang-12 lld-12 ninja-build flex bison libfl-dev
  
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}
      run: |
        mkdir -p cmake
        cd cmake
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DCMAKE_C_COMPILER=clang-12 -DCMAKE_CXX_COMPILER=clang++-12 -DCMAKE_INSTALL_PREFIX=/usr/local/morfuse/engine -G Ninja ../
 
    - name: Build
      # Build program with the generated make
      working-directory: ${{github.workspace}}/cmake
      run: ninja

    - name: Test
      working-directory: ${{github.workspace}}/cmake/tests
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest